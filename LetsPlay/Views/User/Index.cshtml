@model LetsPlay.Models.ViewModels.FriendshipsViewModel
@using Microsoft.AspNetCore.Identity
@using LetsPlay.Models

@inject SignInManager<ApplicationUser> SignInManager

@{
    Layout = "_Layout";
    bool isFriend = false;
    bool pendingRequest = false;
    bool ownProfile = false;

    @if (Model.User.UserName != SignInManager.UserManager.GetUserName(User))
    {
        ownProfile = true;
    }

    if (Model.Friends.Contains(Model.User))
    {
        isFriend = true;
    }

    if (Model.FriendRequests.Contains(Model.User))
    {
        pendingRequest = true;
    }
}
<dl>
    <dt>@Html.DisplayNameFor(model => model.User.Name)</dt>
    <dd>@Html.DisplayFor(model => model.User.Name)</dd>
    <dt>@Html.DisplayNameFor(model => model.User.GamerTag)</dt>
    <dd>@Html.DisplayFor(model => model.User.GamerTag)</dd>
    <dt>@Html.DisplayNameFor(model => model.User.Age)</dt>
    <dd>@Html.DisplayFor(model => model.User.Age)</dd>
    <dt>@Html.DisplayNameFor(model => model.User.Location)</dt>
    <dd>@Html.DisplayFor(model => model.User.Location)</dd>
</dl>

@if (ownProfile)
{
    <a href="#">Edit profile</a>
}
else if (isFriend)
{
    <p>You are Friends!</p>
}
else if (pendingRequest)
{
    <p>Friend Request Sent!</p>
}
else
{
    <form asp-action="SendRequest" asp-controller="Friendships" method="post">
        <input type="hidden" name="from" value="@SignInManager.UserManager.GetUserName(User)" />
        <input type="hidden" name="to" value="@Model.User.UserName" />
        <button type="submit">Send Friend Request</button>
    </form>
}

<form asp-action="Logout" asp-controller="Account" method="post">
    <button type="submit">Logout</button>
</form>

